// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: v1/key_service.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddUserKeysRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PublicKey           []byte                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PrivateKeyProtected []byte                 `protobuf:"bytes,2,opt,name=private_key_protected,json=privateKeyProtected,proto3" json:"private_key_protected,omitempty"`
	MasterKeyHash       []byte                 `protobuf:"bytes,3,opt,name=master_key_hash,json=masterKeyHash,proto3" json:"master_key_hash,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AddUserKeysRequest) Reset() {
	*x = AddUserKeysRequest{}
	mi := &file_v1_key_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserKeysRequest) ProtoMessage() {}

func (x *AddUserKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_key_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserKeysRequest.ProtoReflect.Descriptor instead.
func (*AddUserKeysRequest) Descriptor() ([]byte, []int) {
	return file_v1_key_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddUserKeysRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *AddUserKeysRequest) GetPrivateKeyProtected() []byte {
	if x != nil {
		return x.PrivateKeyProtected
	}
	return nil
}

func (x *AddUserKeysRequest) GetMasterKeyHash() []byte {
	if x != nil {
		return x.MasterKeyHash
	}
	return nil
}

type AddUserKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserKeysResponse) Reset() {
	*x = AddUserKeysResponse{}
	mi := &file_v1_key_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserKeysResponse) ProtoMessage() {}

func (x *AddUserKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_key_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserKeysResponse.ProtoReflect.Descriptor instead.
func (*AddUserKeysResponse) Descriptor() ([]byte, []int) {
	return file_v1_key_service_proto_rawDescGZIP(), []int{1}
}

type GetUserPublicKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserPublicKeyRequest) Reset() {
	*x = GetUserPublicKeyRequest{}
	mi := &file_v1_key_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPublicKeyRequest) ProtoMessage() {}

func (x *GetUserPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_key_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*GetUserPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_v1_key_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserPublicKeyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserPublicKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     []byte                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserPublicKeyResponse) Reset() {
	*x = GetUserPublicKeyResponse{}
	mi := &file_v1_key_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPublicKeyResponse) ProtoMessage() {}

func (x *GetUserPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_key_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*GetUserPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_v1_key_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserPublicKeyResponse) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type GetUserProtectedKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserProtectedKeysRequest) Reset() {
	*x = GetUserProtectedKeysRequest{}
	mi := &file_v1_key_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserProtectedKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProtectedKeysRequest) ProtoMessage() {}

func (x *GetUserProtectedKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_key_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProtectedKeysRequest.ProtoReflect.Descriptor instead.
func (*GetUserProtectedKeysRequest) Descriptor() ([]byte, []int) {
	return file_v1_key_service_proto_rawDescGZIP(), []int{4}
}

type GetUserProtectedKeysResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PrivateKeyProtected []byte                 `protobuf:"bytes,1,opt,name=private_key_protected,json=privateKeyProtected,proto3" json:"private_key_protected,omitempty"`
	MasterKeyHash       []byte                 `protobuf:"bytes,2,opt,name=master_key_hash,json=masterKeyHash,proto3" json:"master_key_hash,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetUserProtectedKeysResponse) Reset() {
	*x = GetUserProtectedKeysResponse{}
	mi := &file_v1_key_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserProtectedKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProtectedKeysResponse) ProtoMessage() {}

func (x *GetUserProtectedKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_key_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProtectedKeysResponse.ProtoReflect.Descriptor instead.
func (*GetUserProtectedKeysResponse) Descriptor() ([]byte, []int) {
	return file_v1_key_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserProtectedKeysResponse) GetPrivateKeyProtected() []byte {
	if x != nil {
		return x.PrivateKeyProtected
	}
	return nil
}

func (x *GetUserProtectedKeysResponse) GetMasterKeyHash() []byte {
	if x != nil {
		return x.MasterKeyHash
	}
	return nil
}

type GetProtectedVaultKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VaultId       string                 `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProtectedVaultKeyRequest) Reset() {
	*x = GetProtectedVaultKeyRequest{}
	mi := &file_v1_key_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProtectedVaultKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProtectedVaultKeyRequest) ProtoMessage() {}

func (x *GetProtectedVaultKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_key_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProtectedVaultKeyRequest.ProtoReflect.Descriptor instead.
func (*GetProtectedVaultKeyRequest) Descriptor() ([]byte, []int) {
	return file_v1_key_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetProtectedVaultKeyRequest) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

type GetProtectedVaultKeyResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	VaultKeyProtected []byte                 `protobuf:"bytes,1,opt,name=vault_key_protected,json=vaultKeyProtected,proto3" json:"vault_key_protected,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetProtectedVaultKeyResponse) Reset() {
	*x = GetProtectedVaultKeyResponse{}
	mi := &file_v1_key_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProtectedVaultKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProtectedVaultKeyResponse) ProtoMessage() {}

func (x *GetProtectedVaultKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_key_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProtectedVaultKeyResponse.ProtoReflect.Descriptor instead.
func (*GetProtectedVaultKeyResponse) Descriptor() ([]byte, []int) {
	return file_v1_key_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetProtectedVaultKeyResponse) GetVaultKeyProtected() []byte {
	if x != nil {
		return x.VaultKeyProtected
	}
	return nil
}

var File_v1_key_service_proto protoreflect.FileDescriptor

const file_v1_key_service_proto_rawDesc = "" +
	"\n" +
	"\x14v1/key_service.proto\x12\x05larec\"\x8f\x01\n" +
	"\x12AddUserKeysRequest\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\fR\tpublicKey\x122\n" +
	"\x15private_key_protected\x18\x02 \x01(\fR\x13privateKeyProtected\x12&\n" +
	"\x0fmaster_key_hash\x18\x03 \x01(\fR\rmasterKeyHash\"\x15\n" +
	"\x13AddUserKeysResponse\"2\n" +
	"\x17GetUserPublicKeyRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"9\n" +
	"\x18GetUserPublicKeyResponse\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\fR\tpublicKey\"\x1d\n" +
	"\x1bGetUserProtectedKeysRequest\"z\n" +
	"\x1cGetUserProtectedKeysResponse\x122\n" +
	"\x15private_key_protected\x18\x01 \x01(\fR\x13privateKeyProtected\x12&\n" +
	"\x0fmaster_key_hash\x18\x02 \x01(\fR\rmasterKeyHash\"8\n" +
	"\x1bGetProtectedVaultKeyRequest\x12\x19\n" +
	"\bvault_id\x18\x01 \x01(\tR\avaultId\"N\n" +
	"\x1cGetProtectedVaultKeyResponse\x12.\n" +
	"\x13vault_key_protected\x18\x01 \x01(\fR\x11vaultKeyProtected2\xe9\x02\n" +
	"\n" +
	"KeyService\x12D\n" +
	"\vAddUserKeys\x12\x19.larec.AddUserKeysRequest\x1a\x1a.larec.AddUserKeysResponse\x12S\n" +
	"\x10GetUserPublicKey\x12\x1e.larec.GetUserPublicKeyRequest\x1a\x1f.larec.GetUserPublicKeyResponse\x12_\n" +
	"\x14GetUserProtectedKeys\x12\".larec.GetUserProtectedKeysRequest\x1a#.larec.GetUserProtectedKeysResponse\x12_\n" +
	"\x14GetProtectedVaultKey\x12\".larec.GetProtectedVaultKeyRequest\x1a#.larec.GetProtectedVaultKeyResponseB\bZ\x06/apiv1b\x06proto3"

var (
	file_v1_key_service_proto_rawDescOnce sync.Once
	file_v1_key_service_proto_rawDescData []byte
)

func file_v1_key_service_proto_rawDescGZIP() []byte {
	file_v1_key_service_proto_rawDescOnce.Do(func() {
		file_v1_key_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_key_service_proto_rawDesc), len(file_v1_key_service_proto_rawDesc)))
	})
	return file_v1_key_service_proto_rawDescData
}

var file_v1_key_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_v1_key_service_proto_goTypes = []any{
	(*AddUserKeysRequest)(nil),           // 0: larec.AddUserKeysRequest
	(*AddUserKeysResponse)(nil),          // 1: larec.AddUserKeysResponse
	(*GetUserPublicKeyRequest)(nil),      // 2: larec.GetUserPublicKeyRequest
	(*GetUserPublicKeyResponse)(nil),     // 3: larec.GetUserPublicKeyResponse
	(*GetUserProtectedKeysRequest)(nil),  // 4: larec.GetUserProtectedKeysRequest
	(*GetUserProtectedKeysResponse)(nil), // 5: larec.GetUserProtectedKeysResponse
	(*GetProtectedVaultKeyRequest)(nil),  // 6: larec.GetProtectedVaultKeyRequest
	(*GetProtectedVaultKeyResponse)(nil), // 7: larec.GetProtectedVaultKeyResponse
}
var file_v1_key_service_proto_depIdxs = []int32{
	0, // 0: larec.KeyService.AddUserKeys:input_type -> larec.AddUserKeysRequest
	2, // 1: larec.KeyService.GetUserPublicKey:input_type -> larec.GetUserPublicKeyRequest
	4, // 2: larec.KeyService.GetUserProtectedKeys:input_type -> larec.GetUserProtectedKeysRequest
	6, // 3: larec.KeyService.GetProtectedVaultKey:input_type -> larec.GetProtectedVaultKeyRequest
	1, // 4: larec.KeyService.AddUserKeys:output_type -> larec.AddUserKeysResponse
	3, // 5: larec.KeyService.GetUserPublicKey:output_type -> larec.GetUserPublicKeyResponse
	5, // 6: larec.KeyService.GetUserProtectedKeys:output_type -> larec.GetUserProtectedKeysResponse
	7, // 7: larec.KeyService.GetProtectedVaultKey:output_type -> larec.GetProtectedVaultKeyResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_key_service_proto_init() }
func file_v1_key_service_proto_init() {
	if File_v1_key_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_key_service_proto_rawDesc), len(file_v1_key_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_key_service_proto_goTypes,
		DependencyIndexes: file_v1_key_service_proto_depIdxs,
		MessageInfos:      file_v1_key_service_proto_msgTypes,
	}.Build()
	File_v1_key_service_proto = out.File
	file_v1_key_service_proto_goTypes = nil
	file_v1_key_service_proto_depIdxs = nil
}
